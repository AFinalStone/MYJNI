
7、ImageProcess对象

这个对象里面的方法基本都是对图片的美化处理方法，这里我们主要用到三个方法:

>  public static Bitmap StyleLomoB(Bitmap paramBitmap, boolean paramBoolean)

>  public static Bitmap StyleLomoC(Bitmap paramBitmap, boolean paramBoolean)

>  public static Bitmap StyleOldPhoto(Bitmap paramBitmap, Context paramContext, boolean paramBoolean)


```java

public class ImageProcess
{
  private static float[] DELTA_INDEX = { 0.0F, 0.01F, 0.02F, 0.04F, 0.05F, 0.06F, 0.07F, 0.08F, 0.1F, 0.11F, 0.12F, 0.14F, 0.15F, 0.16F, 0.17F, 0.18F, 0.2F, 0.21F, 0.22F, 0.24F, 0.25F, 0.27F, 0.28F, 0.3F, 0.32F, 0.34F, 0.36F, 0.38F, 0.4F, 0.42F, 0.44F, 0.46F, 0.48F, 0.5F, 0.53F, 0.56F, 0.59F, 0.62F, 0.65F, 0.68F, 0.71F, 0.74F, 0.77F, 0.8F, 0.83F, 0.86F, 0.89F, 0.92F, 0.95F, 0.98F, 1.0F, 1.06F, 1.12F, 1.18F, 1.24F, 1.3F, 1.36F, 1.42F, 1.48F, 1.54F, 1.6F, 1.66F, 1.72F, 1.78F, 1.84F, 1.9F, 1.96F, 2.0F, 2.12F, 2.25F, 2.37F, 2.5F, 2.62F, 2.75F, 2.87F, 3.0F, 3.2F, 3.4F, 3.6F, 3.8F, 4.0F, 4.3F, 4.7F, 4.9F, 5.0F, 5.5F, 6.0F, 6.5F, 6.8F, 7.0F, 7.3F, 7.5F, 7.8F, 8.0F, 8.4F, 8.7F, 9.0F, 9.4F, 9.6F, 9.8F, 10.0F };
  private static JNI jni = new JNI();

   ...代码省略...


  public static Bitmap StyleLomoB(Bitmap paramBitmap, boolean paramBoolean)
  {
    Object localObject2 = null;
    Object localObject1 = localObject2;
    try
    {
      long l1 = System.currentTimeMillis();
      localObject1 = localObject2;
      MTDebug.Print("StyleLomoB 0");
      localObject1 = localObject2;
      int i = paramBitmap.getWidth();
      localObject1 = localObject2;
      int j = paramBitmap.getHeight();
      localObject1 = localObject2;
      int[] arrayOfInt = bitmap2IntARGB(paramBitmap);
      localObject1 = localObject2;
      MTDebug.Print("StyleLomoB 1");
      if (paramBoolean)
      {
        localObject1 = localObject2;
        paramBitmap.recycle();
      }
      localObject1 = localObject2;
      MTDebug.Print("StyleLomoB 2");
      localObject1 = localObject2;
      jni.StyleLomoB(arrayOfInt, i, j);
      localObject1 = localObject2;
      MTDebug.Print("StyleLomoB 3");
      localObject1 = localObject2;
      paramBitmap = intARGB2Bimap(arrayOfInt, i, j);
      localObject1 = paramBitmap;
      long l2 = System.currentTimeMillis();
      localObject1 = paramBitmap;
      MTDebug.Print("StyleLomoB time=" + (l2 - l1));
      return paramBitmap;
    }
    catch (Exception paramBitmap)
    {
      MTDebug.Print("StyleLomoB Error!" + paramBitmap.toString());
      paramBitmap.printStackTrace();
    }
    return localObject1;
  }
  
  public static Bitmap StyleLomoC(Bitmap paramBitmap, boolean paramBoolean)
  {
    Object localObject2 = null;
    Object localObject1 = localObject2;
    try
    {
      long l1 = System.currentTimeMillis();
      localObject1 = localObject2;
      int i = paramBitmap.getWidth();
      localObject1 = localObject2;
      int j = paramBitmap.getHeight();
      localObject1 = localObject2;
      int[] arrayOfInt = bitmap2IntARGB(paramBitmap);
      if (paramBoolean)
      {
        localObject1 = localObject2;
        paramBitmap.recycle();
      }
      localObject1 = localObject2;
      jni.StyleLomoC(arrayOfInt, i, j);
      localObject1 = localObject2;
      paramBitmap = intARGB2Bimap(arrayOfInt, i, j);
      localObject1 = paramBitmap;
      long l2 = System.currentTimeMillis();
      localObject1 = paramBitmap;
      MTDebug.Print("StyleLomoC time=" + (l2 - l1));
      return paramBitmap;
    }
    catch (Exception paramBitmap)
    {
      paramBitmap.printStackTrace();
    }
    return localObject1;
  }

  /* Error */
  public static Bitmap StyleMilk(Bitmap paramBitmap, Context paramContext, boolean paramBoolean)
  {
  }
  
  public static Bitmap StyleOldPhoto(Bitmap paramBitmap, Context paramContext, boolean paramBoolean)
  {
    Object localObject2 = null;
    Object localObject1 = localObject2;
    try
    {
      long l1 = System.currentTimeMillis();
      localObject1 = localObject2;
      int i = paramBitmap.getWidth();
      localObject1 = localObject2;
      int j = paramBitmap.getHeight();
      localObject1 = localObject2;
      Object localObject3 = LoadAssertsPic("style/mtxx_lzp_b.jpg", paramContext.getAssets());
      localObject1 = localObject2;
      paramContext = resize((Bitmap)localObject3, i, j, false);
      localObject1 = localObject2;
      ((Bitmap)localObject3).recycle();
      localObject1 = localObject2;
      localObject3 = bitmap2IntARGB(paramBitmap);
      if (paramBoolean)
      {
        localObject1 = localObject2;
        paramBitmap.recycle();
      }
      localObject1 = localObject2;
      paramBitmap = bitmap2IntARGB(paramContext);
      localObject1 = localObject2;
      paramContext.recycle();
      localObject1 = localObject2;
      jni.StyleOldPhoto((int[])localObject3, paramBitmap, i, j);
      localObject1 = localObject2;
      paramBitmap = intARGB2Bimap((int[])localObject3, i, j);
      localObject1 = paramBitmap;
      long l2 = System.currentTimeMillis();
      localObject1 = paramBitmap;
      MTDebug.Print("StyleOldPhoto time=" + (l2 - l1));
      return paramBitmap;
    }
    catch (Exception paramBitmap)
    {
      paramBitmap.printStackTrace();
    }
    return localObject1;
  }
  
 ...代码省略...
}

细看代码，每个方法内部都调用了JNI相对应的方法：

>StyleLomoB内部调用了jni.StyleLomoB(arrayOfInt, i, j);

>StyleLomoC内部调用了jni.StyleLomoC(arrayOfInt, i, j);

>StyleOldPhoto内部调用了jni.StyleOldPhoto((int[])localObject3, paramBitmap, i, j);

如果能跟着反编译的代码看到这里，那么我们基本可以非常熟练的使用美图秀秀的.so库文件了。